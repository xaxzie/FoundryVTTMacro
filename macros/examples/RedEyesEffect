// === CONFIGURATION ===
const effectName = "Red Eyes";       // Nom de l'effet actif
const redEyesValue = 3;              // Valeur associ√©e
const actor = canvas.tokens.controlled[0]?.actor; // Acteur du token s√©lectionn√©

if (!actor) {
  ui.notifications.warn("‚ö†Ô∏è S√©lectionnez un token !");
  return;
}

// V√©rifie si l'effet existe d√©j√†
let effect = actor.effects.find(e => e.name === effectName);

if (!effect) {
  // ‚úÖ Cr√©e l'effet si absent
  await actor.createEmbeddedDocuments("ActiveEffect", [{
    name: effectName,
    icon: "icons/creatures/eyes/red-glow.webp", // Mets une ic√¥ne de ton choix
    origin: actor.uuid,
    duration: { seconds: 3600 }, // 1 heure par d√©faut (modifiable)
    flags: {
      redEyes: { value: redEyesValue } // Valeur stock√©e
    }
  }]);
  ui.notifications.info(`‚ú® "${effectName}" activ√© (+${redEyesValue}).`);
} else {
  // ‚ùå Supprime l'effet si pr√©sent
  await actor.deleteEmbeddedDocuments("ActiveEffect", [effect.id]);
  ui.notifications.info(`üí§ "${effectName}" d√©sactiv√©.`);
}